<?php

/* 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка. */

echo "<u>1 задание:</u><br>";

$a = 0;
echo "Числа, от 0 - 100, делящиеся на 3 без остатка: ";

while ($a <= 100) {
    if ($a % 3 == 0) {
        echo "{$a}\n";
    }
    $a++;
}

echo "<br><br>";

/* 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:

0 – ноль.
1 – нечетное число.
2 – четное число.
3 – нечетное число.
…
10 – четное число. */

echo "<u>2 задание:</u><br>";

function printNumbers($a)
{
    if ($a == 0) {
        return "{$a} - ноль.<br>";
    } elseif ($a % 2 == 0) {
        return "{$a} - чётное число.<br>";
    } else {
        return "{$a} - нечётное число.<br>";
    }
}

$a = 0;

do {
    echo printNumbers($a);
    $a++;
} while ($a <= 10);

/* 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:

    Московская область:
    Москва, Зеленоград, Клин.
    Ленинградская область:
    Санкт-Петербург, Всеволожск, Павловск, Кронштадт.
    Рязанская область … (названия городов можно найти на maps.yandex.ru) строго соблюдать формат вывода выше, т.е. двоеточие и точка в конце. */

echo "<br><u>3 задание:</u>";

$sities = [
    'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
    'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
    'Рязанская область' => ['Рязань', 'Скопин', 'Касимов']
];

foreach ($sities as $key => $area) {
    echo "<br><strong>" . $key . ":</strong><br>";
    $str = "";
    foreach ($area as $towns) {
        if (mb_substr($towns, 0, 1, "UTF-8")) {
            $str .= $towns . ", ";
        }
    }
    $str = mb_substr($str, 0, -2) . ".<br>";
    echo "{$str}";
}

/* 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).

Написать функцию транслитерации строк. Она должна учитывать и заглавные буквы. */

echo "<br><u>4 задание (1 вариант - без учёта регистра):</u><br>";
/* Хотел именно в этом ключе полное задание сделать, но не получилось. */

function showTransliteration($str)
{
    $alfabet = [
        'а' => 'a', 'б' => 'b', 'в' => 'v',
        'г' => 'g', 'д' => 'd', 'е' => 'e',
        'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
        'и' => 'i', 'й' => 'y', 'к' => 'k',
        'л' => 'l', 'м' => 'm', 'н' => 'n',
        'о' => 'o', 'п' => 'p', 'р' => 'r',
        'с' => 's', 'т' => 't', 'у' => 'u',
        'ф' => 'f', 'х' => 'h', 'ц' => 'c',
        'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
        'ь' => ',', 'ы' => ',|', 'ъ' => '/',
        'э' => 'e', 'ю' => 'yu', 'я' => 'ya'
    ];
    $result = strtr($str, $alfabet);

    return $result;
}

echo showTransliteration('привет, мир!');

echo "<br><u>4 задание (2 вариант - с учётом регистра):</u><br>";
// Данный вариант не нравится вложенными (if - else), хотелось как-то иначе.

$string = "ПривеТ, МиР!";
echo $string . "<br>";

$alfabet = [
    'а' => 'a', 'б' => 'b', 'в' => 'v',
    'г' => 'g', 'д' => 'd', 'е' => 'e',
    'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
    'и' => 'i', 'й' => 'y', 'к' => 'k',
    'л' => 'l', 'м' => 'm', 'н' => 'n',
    'о' => 'o', 'п' => 'p', 'р' => 'r',
    'с' => 's', 'т' => 't', 'у' => 'u',
    'ф' => 'f', 'х' => 'h', 'ц' => 'c',
    'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
    'ь' => ',', 'ы' => ',|', 'ъ' => '/',
    'э' => 'e', 'ю' => 'yu', 'я' => 'ya'
];

$result = "";
for ($i = 0; $i < mb_strlen($string); $i++) {
    $letter = mb_substr($string, $i, 1);

    if (isset($alfabet[mb_strtolower($letter)])) {
        if ($letter === mb_strtolower($letter)) {
            $latin_letter = $alfabet[$letter];
        } else {
            $latin_letter = mb_strtoupper($alfabet[mb_strtolower($letter)]);
        }
    } else {
        $latin_letter = $letter;
    }
    $result .= $latin_letter;
}

echo $result;

/* 5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку. Можно через str_replace */

echo "<br><br><u>5 задание (1 вариант):</u><br>";
// Функция универсальна тем, что при необходимости, можно добавить дополнительные параметры замены, внутрь массива.

function replaceSign($str)
{
    $text = [
        ' ' => '_'
    ];

    return strtr($str, $text);
}

echo replaceSign('Один Два Три');

echo "<br><br><u>5 задание (2 вариант):</u><br>";

function replaseSign($str)
{
    return str_replace('', '_', $str);
}

echo replaceSign('Второй вариант задания.');

/* 7. *Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла. Выглядеть должно так:

for (…){ // здесь пусто} */

echo "<br><br><u>7 задание:</u><br>";

for ($i = 0; $i <= 9; print($i++)) {
};

/* 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К». */

echo "<br><br><u>8 задание:</u>";

$sities = [
    'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
    'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
    'Рязанская область' => ['Рязань', 'Скопин', 'Касимов']
];

foreach ($sities as $key => $area) {
    echo "<br><strong>" . $key . ":</strong><br>";
    $str = "";
    foreach ($area as $towns) {
        if (mb_substr($towns, 0, 1, "UTF-8") == 'К') {
            $str .= $towns . ", ";
        }
    }
    $str = mb_substr($str, 0, -2) . ".<br>";
    echo "{$str}";
}

/* 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах). */

echo "<br><u>9 задание:</u><br>";

$string = "ПривеТ, МиР!";
echo $string . "<br>";

$alfabet = [
    'а' => 'a', 'б' => 'b', 'в' => 'v',
    'г' => 'g', 'д' => 'd', 'е' => 'e',
    'ё' => 'e', 'ж' => 'zh', 'з' => 'z',
    'и' => 'i', 'й' => 'y', 'к' => 'k',
    'л' => 'l', 'м' => 'm', 'н' => 'n',
    'о' => 'o', 'п' => 'p', 'р' => 'r',
    'с' => 's', 'т' => 't', 'у' => 'u',
    'ф' => 'f', 'х' => 'h', 'ц' => 'c',
    'ч' => 'ch', 'ш' => 'sh', 'щ' => 'sch',
    'ь' => ',', 'ы' => ',|', 'ъ' => '/',
    'э' => 'e', 'ю' => 'yu', 'я' => 'ya',
    ' ' => '_'
];

$result = "";
for ($i = 0; $i < mb_strlen($string); $i++) {
    $letter = mb_substr($string, $i, 1);

    if (isset($alfabet[mb_strtolower($letter)])) {
        if ($letter === mb_strtolower($letter)) {
            $latin_letter = $alfabet[$letter];
        } else {
            $latin_letter = mb_strtoupper($alfabet[mb_strtolower($letter)]);
        }
    } else {
        $latin_letter = $letter;
    }
    $result .= $latin_letter;
}

echo $result . "<br><br>";
